name: Build And Push Docker Image via Golang Hello World Application
env:
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
  REMOTE_HOST: ${{ secrets.REMOTE_HOST }}

on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master

jobs:
  build_artifact:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Golang
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'

      - name: Build Go Application
        run: go build -o main .

      - uses: actions/upload-artifact@master
        with:
          name: main
          path: ./main

  build_push_image:
    needs: build_artifact
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - uses: actions/download-artifact@master
        with:
          name: main
          path: ./main

      - name: docker login
        run: docker login -u ${DOCKER_USERNAME} -p ${DOCKER_PASSWORD}

      - name: docker build
        run: docker build . -t ${DOCKER_USERNAME}/test:${GITHUB_SHA}

      - name: docker push
        run: docker push ${DOCKER_USERNAME}/test:${GITHUB_SHA}
  deploy:
    needs: build_push_image
    runs-on: ubuntu-latest
    env:
      SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 400 ~/.ssh/id_rsa
          ssh-keyscan -t rsa ${REMOTE_HOST} >> ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts

      - name: SSH into remote host
        run: |
          ssh -i ~/.ssh/id_rsa sshtest@${REMOTE_HOST} "docker run -d -p 8888:80 ${DOCKER_USERNAME}/test:${GITHUB_SHA}"
